<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Vantage.WPF.Converters"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Controls/Switch/Themes/SwitchStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!-- ******************************* -->
    <!-- Boolean to Visibility Converter -->
    <!-- ******************************* -->
    <BooleanToVisibilityConverter x:Key="visibilityConverter" />
    <converters:BoolInverterConverter x:Key="BoolInverteConverter" />
    <converters:BoolToOnOffConverter x:Key="BoolToOnOffConverter" />
    <!-- *********************************** -->
    <!-- Drop Shadow for Buttons -->
    <!-- *********************************** -->
    <DropShadowEffect x:Key="buttonShadow"
                      Color="Gray"
                      ShadowDepth="4" />
    <!-- *********************************** -->
    <!-- Drop Shadow for User Controls -->
    <!-- *********************************** -->
    <DropShadowEffect x:Key="screenShadow"
                      Color="Gray"
                      BlurRadius="5"
                      ShadowDepth="8" />
    <!-- *********************************** -->
    <!-- Gradient Brush for Grid Background -->
    <!-- *********************************** -->
    <LinearGradientBrush StartPoint="0.5,0"
                         EndPoint="0.5,1"
                         x:Key="gridBackgroundColor">
        <GradientStop Color="Gray"
                      Offset="0" />
        <GradientStop Color="DarkGray"
                      Offset="1" />
    </LinearGradientBrush>
    <!-- *************** -->
    <!-- Main Grid Style -->
    <!-- *************** -->
    <Style TargetType="Grid"
           x:Key="gridMainStyle">
        <Setter Property="Background"
                Value="{StaticResource gridBackgroundColor}" />
    </Style>
    <!-- ****************************************** -->
    <!-- Gradient Brush for User Control Background -->
    <!-- ****************************************** -->
    <LinearGradientBrush StartPoint="0.5,0"
                         EndPoint="0.5,1"
                         x:Key="screenBackgroundColor">
        <GradientStop Color="DarkGray"
                      Offset="0" />
        <GradientStop Color="Gray"
                      Offset="1" />
    </LinearGradientBrush>
    <!-- ************************** -->
    <!-- User Control Overall Style -->
    <!-- ************************** -->
    <Style TargetType="UserControl"
           x:Key="screenStyle">
        <Setter Property="MinWidth"
                Value="600" />
        <Setter Property="Effect"
                Value="{StaticResource screenShadow}" />
        <!-- Animate Opacity -->
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="0"
                                         To="1"
                                         Duration="00:00:00.4" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <!-- ******************************** -->
    <!-- User Control Screen Border Style -->
    <!-- ******************************** -->
    <Style TargetType="Border"
           x:Key="screenBorder">
        <Setter Property="Background"
                Value="{StaticResource screenBackgroundColor}" />
        <Setter Property="BorderBrush"
                Value="#FF5F5F5F" />
        <Setter Property="CornerRadius"
                Value="10" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="12" />
        <Setter Property="Margin"
                Value="16" />
    </Style>
    <!-- ********************************* -->
    <!-- Global Styles for "Control" types -->
    <!-- ********************************* -->
    <Style TargetType="Control"
           x:Key="baseControl">
        <Setter Property="Margin"
                Value="4" />
        <Setter Property="Padding"
                Value="4" />
    </Style>
    <Style TargetType="Button"
           BasedOn="{StaticResource baseControl}">
    </Style>
    <Style TargetType="TextBox"
           BasedOn="{StaticResource baseControl}">
    </Style>
    <Style TargetType="PasswordBox"
           BasedOn="{StaticResource baseControl}">
    </Style>
    <Style TargetType="Label"
           BasedOn="{StaticResource baseControl}">
    </Style>
    <Style TargetType="ListBox"
           BasedOn="{StaticResource baseControl}">
    </Style>
    <Style TargetType="ListView"
           BasedOn="{StaticResource baseControl}">
    </Style>
    <Style TargetType="RadioButton"
           BasedOn="{StaticResource baseControl}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <Style TargetType="CheckBox"
           BasedOn="{StaticResource baseControl}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <!-- ****************************************** -->
    <!-- Global Styles for "FrameworkElement" types -->
    <!-- ****************************************** -->
    <Style TargetType="FrameworkElement"
           x:Key="baseFrameworkElement">
        <Setter Property="Margin"
                Value="4" />
    </Style>
    <Style TargetType="Panel"
           BasedOn="{StaticResource baseFrameworkElement}">
    </Style>
    <Style TargetType="StackPanel"
           BasedOn="{StaticResource baseFrameworkElement}">
    </Style>
    <Style TargetType="TextBlock"
           BasedOn="{StaticResource baseFrameworkElement}">
    </Style>
    <Style TargetType="Image"
           BasedOn="{StaticResource baseFrameworkElement}">
    </Style>

    <!-- Data Grid Styles -->
    <LinearGradientBrush x:Key="ComboBox.Static.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFF0F0F0"
                      Offset="0.0" />
        <GradientStop Color="#FFE5E5E5"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border"
                     Color="#FFACACAC" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                     Color="#FF606060" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                     Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                     Color="Transparent" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFECF4FC"
                      Offset="0.0" />
        <GradientStop Color="#FFDCECFC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                     Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                     Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC"
                      Offset="0.0" />
        <GradientStop Color="#FFDCECFC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                     Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFDAECFC"
                      Offset="0.0" />
        <GradientStop Color="#FFC4E0FC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                     Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                     Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                     Color="#FF569DE5" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC"
                      Offset="0.0" />
        <GradientStop Color="#FFC4E0FC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                     Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                     Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                     Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                     Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                     Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                     Color="Transparent" />
    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{StaticResource ComboBox.Static.Border}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                BorderThickness="1"
                                BorderBrush="Transparent"
                                HorizontalAlignment="Right"
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center"
                                  Margin="0"
                                  VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter Property="Background"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Fill"
                                    TargetName="arrow"
                                    Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter Property="Background"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Fill"
                                    TargetName="arrow"
                                    Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter Property="Background"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Fill"
                                    TargetName="arrow"
                                    Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter Property="Background"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridColumnHeader"
           x:Key="SortColumnStyle">
        <Style.Triggers>
            <Trigger Property="CanUserSort"
                     Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid Background="Green">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter VerticalAlignment="Center" />
                                <TextBlock Grid.Column="1"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Margin="0,0,8,0"
                                           RenderTransformOrigin="0.5, 0.4"
                                           Foreground="#006896"
                                           FontFamily="Segoe MDL2 Assets"
                                           FontSize="12"
                                           Text="">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="90" />
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background"
                Value="Red" />
        <Setter Property="TextBlock.Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#000000"
                                 Opacity="0.99" />
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.FontSize"
                Value="12" />
        <Setter Property="Height"
                Value="53" />
    </Style>
    <ControlTemplate x:Key="DropdownTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow"
                                              Color="Transparent"
                                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left"
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="false"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="0,0,5,5" />
                <Setter Property="Color"
                        TargetName="shadow"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="DataGridCell" x:Key="DataGridCellStyle">
        <Setter Property="Padding"
                Value="10,0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="TextBlock.FontSize"
                Value="14" />
        <Setter Property="TextBlock.Foreground"
                Value="Black" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="TextBlock.Foreground"
                        Value="#5F6164" />
                <Setter Property="TextBlock.FontWeight"
                        Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridColumnHeader" x:Key="DataGridHeaderStyle">
        <Style.Triggers>
            <Trigger Property="CanUserSort"
                     Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter VerticalAlignment="Center" />
                                <TextBlock Grid.Column="1"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Margin="0,0,8,0"
                                           RenderTransformOrigin="0.5, 0.4"
                                           Foreground="White"
                                           FontFamily="Segoe MDL2 Assets"
                                           FontSize="12"
                                           Text="">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="90" />
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Padding"
                Value="10,0" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#006896"
                                 Opacity="0.99" />
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.Foreground"
                Value="White" />
        <Setter Property="TextBlock.FontSize"
                Value="14" />
        <Setter Property="TextBlock.FontWeight"
                Value="Bold" />
        <Setter Property="Height"
                Value="53" />
    </Style>
    <Style TargetType="DataGrid">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="Transparent" />
        </Style.Resources>
        <Setter Property="SelectionMode"
                Value="Extended" />
        <Setter Property="SelectionUnit"
                Value="FullRow" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="AlternationCount"
                Value="2" />
        <Setter Property="AlternatingRowBackground"
                Value="White" />
        <Setter Property="RowBackground">
            <Setter.Value>
                <SolidColorBrush Color="#F0F0F0"
                                 Opacity="0.54" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalGridLinesBrush"
                Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush"
                Value="Transparent" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="RowDetailsVisibilityMode"
                Value="VisibleWhenSelected" />
        <Setter Property="RowHeight"
                Value="53" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="CellStyle"
                Value="{StaticResource DataGridCellStyle}">
        </Setter>
        <Setter Property="ColumnHeaderStyle"
                Value="{StaticResource DataGridHeaderStyle}">
        </Setter>
    </Style>
    <!-- ******************** -->
    <!-- Special Keyed Styles -->
    <!-- ******************** -->
    <Style TargetType="Label"
           x:Key="inverseLabel"
           BasedOn="{StaticResource baseControl}">
        <Setter Property="Foreground"
                Value="White" />
    </Style>
    <Style TargetType="Border"
           x:Key="infoMessageArea"
           BasedOn="{StaticResource screenBorder}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="20" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="Gray" />
    </Style>
    <Style TargetType="Grid"
           x:Key="contentAreaStyle">
        <Setter Property="Margin"
                Value="10" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
    </Style>
    <Style TargetType="Border"
           x:Key="minimizedBorderStyle">
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Setter Property="BorderThickness"
                Value="0 1 0 0" />
    </Style>
    <Style TargetType="WrapPanel"
           x:Key="minimizedAreaStyle">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="Orientation"
                Value="Horizontal" />
    </Style>
    <Style TargetType="TextBlock"
           x:Key="statusAreaStyle">
        <Setter Property="Margin"
                Value="10,4" />
    </Style>
    <!-- ************* -->
    <!-- Button Styles -->
    <!-- ************* -->
    <Style TargetType="Button"
           x:Key="closeButton"
           BasedOn="{StaticResource baseControl}">
        <Setter Property="Padding"
                Value="4,-2,4,1" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="ToolTip"
                Value="Close this Window" />
    </Style>
    <Style TargetType="Button"
           x:Key="cancelButton"
           BasedOn="{StaticResource baseControl}">
        <Setter Property="Effect"
                Value="{StaticResource buttonShadow}" />
    </Style>
    <Style TargetType="Button"
           x:Key="submitButton"
           BasedOn="{StaticResource cancelButton}">
        <Setter Property="MinWidth"
                Value="85" />
    </Style>
    <Style TargetType="Button"
           x:Key="buttonWithImage">
        <Setter Property="Height"
                Value="24" />
    </Style>

    <!-- ********************* -->
    <!-- Toolbar Button Styles -->
    <!-- ********************* -->
    <Style TargetType="Button"
           x:Key="toolbarButton">
        <Setter Property="Height"
                Value="32" />
    </Style>
    <!-- Titlebar Button Styles -->
    <Style TargetType="Button"
           x:Key="TitleBarButtons"
           BasedOn="{StaticResource toolbarButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Foreground"
                Value="Black" />
    </Style>
    <Style TargetType="StackPanel"
           x:Key="toolbarButtonStackPanel">
        <Setter Property="Margin"
                Value="0" />
    </Style>
    <Style TargetType="Image"
           x:Key="toolbarImage">
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- **************************** -->
    <!-- Validation Area Keyed Styles -->
    <!-- **************************** -->
    <Style TargetType="ListBox"
           x:Key="validationArea"
           BasedOn="{StaticResource baseControl}">
        <Setter Property="BorderBrush"
                Value="Red" />
        <Setter Property="BorderThickness"
                Value="2" />
    </Style>
    <!-- ********************** -->
    <!-- Title Bar Keyed Styles -->
    <!-- ********************** -->
    <Style TargetType="Image"
           x:Key="titleBarButton">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Height"
                Value="24" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <Style TargetType="TextBlock"
           x:Key="titleBarTitle">
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <Style TargetType="Border"
           x:Key="titleBarBorder">
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0 0 0 1" />
    </Style>
    <Style TargetType="StackPanel"
           x:Key="titleBarButtonArea">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Orientation"
                Value="Horizontal" />
    </Style>
    <!-- Colors -->
    <SolidColorBrush x:Key="LightBlue">#F8F8F8</SolidColorBrush>
    <SolidColorBrush x:Key="BluredLightBlue"
                     Color="#F8F8F8"
                     Opacity="0.13" />
    <SolidColorBrush x:Key="DarkBlue">#006896</SolidColorBrush>
    <SolidColorBrush x:Key="Gray">#5F6164</SolidColorBrush>
    <SolidColorBrush x:Key="LightGray">#00000066</SolidColorBrush>
</ResourceDictionary>